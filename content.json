[{"title":"Hello World","date":"2019-12-27T13:10:31.023Z","path":"2019/12/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"使用hexo与github搭建个人博客系统","date":"2018-10-27T14:19:02.000Z","path":"2018/10/27/配置hexo与github/","text":"1.软件准备 软件准备 注册Github账户(略) 安装node.js软件(略) 安装Git软件(略) 建议安装Typora(编辑博文使用，略) 创建github page仓库 在Github中创建goldcarpenter.github.io(goldcarpenter为github用户名)的仓库 未来博客网站访问地址就是https://goldcarpenter.github.io 了 仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟 配置SSH key 使用SSH key（公钥私钥）验证登录可以简化我们的登录过程，避免输入账户密码 12ssh-keygen -t rsa -C &quot;youremail@qq.com&quot;提示信息——连续3次回车 在C盘的用户当前用户目录下找到.ssh\\id_rsa.pub，将公钥内容使用软件打开拷贝至setting -&gt; SSH and GPG keys -&gt; New SSH key 将刚复制的内容粘贴到key那里，title填你的计算机名称，保存。 测试SSH key 1ssh -T git@github.com # 注意邮箱地址不用改 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到： 1Hi goldcarpenter! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 如果你是首次使用git，git shell中配置 12345你的github用户名$ git config --global user.name &quot;goldcarpenter&quot;填写你的github注册邮箱$ git config --global user.email &quot;xxx@qq.com&quot; 2. 搭建hexo博客系统2.1.前言 hexo简介 Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 hexo原理 由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容 hexo将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github 注意事项 很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，为避免不必要的问题，使用的命令建议全部使用git bash来执行 hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导； hexo有2类_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下管理各个主题的_config.yml； 2.2. 本地hexo使用 安装hexo 1$ npm install -g hexo 创建博客本地存放文件夹 在电脑的某个地方新建一个文件夹，作为存放代码的地方。我的是F:\\Project\\Hexo_Repo 12$ cd [目标目录]$ hexo init 12345678910├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json #npm 依赖等 12$ hexo g # 生成相关页面$ hexo s # 启动本地hexo预览服务 执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github的 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到hexo写了一篇名为 Hello World 的文章内容 修改主题 官方主题中有很多优秀的主题，本文使用主题为BlueLake 12$ cd [目标目录]$ git clone https:&#x2F;&#x2F;github.com&#x2F;chaooo&#x2F;hexo-theme-BlueLake.git themes&#x2F;BlueLake 下载后的主题放在themes目录中 BlueLake是基于jade和stylus写的，所以需要安装hexo-renderer-jade和hexo-renderer-stylus来渲染 12$ npm install hexo-renderer-jade@0.3.0 --save$ npm install hexo-renderer-stylus --save 修改_config.yml中的theme: landscape改为theme: BlueLake 12$ hexo clean$ hexo g 更新主题 今后若主题添加了新功能正是需要的，可以直接git pull来更新主题 12cd themes&#x2F;BlueLakegit pull 2.3. hexo上传Github 上传之前 一定要记得先把你以前所有代码pull下来（虽然github有版本管理，但备份一下总是好的） 因为从hexo提交代码时会把你以前的所有代码都删掉 上传前配置准备 安装插件 1$ npm install hexo-deployer-git --save 配置_config.yml中有关deploy的部分 1234deploy: type: git repository: git@github.com:goldcarpenter&#x2F;goldcarpenter.github.io.git branch: master 上传 1hexo d 2.4. 写博客 定位到我们的hexo根目录 1hexo new &#39;配置hexo与github&#39; hexo会帮我们在_posts下生成相关配置hexo与github.md文件 需要打开这个文件就可以开始写博客了 12345title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面 如何让博文列表不显示全部内容 默认情况下，生成的博文目录会显示全部的文章内容，在合适的位置加上&lt;!--more--&gt;即可设置文章摘要的长度 2.5. 博客系统优化 保留CNAME、README.md等文件 一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的： 由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。 Q&amp;A 图片无法显示 附录 常用hexo命令 1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate &#x3D;&#x3D; hexo g #生成静态页面至public目录hexo server &#x3D;&#x3D; hexo s #开启预览访问端口（默认端口4000）hexo deploy &#x3D;&#x3D; hexo d #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"}]}]